[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "financial-agent-backend"
version = "0.5.2"
description = "AI-Enhanced Financial Analysis Platform Backend"
authors = [
    {name = "Financial Agent Team", email = "team@financialagent.com"},
]
# readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "email-validator>=2.1.0",           # Email validation for pydantic
    "motor>=3.3.0",           # Async MongoDB driver
    "redis>=5.0.0",
    "langchain>=0.3.0",
    "langchain-core>=0.3.0",
    "langchain-community>=0.3.0",
    "langgraph>=0.2.0",
    "langsmith>=0.2.0",
    "dashscope>=1.20.0",      # Alibaba Cloud Qwen API
    "yfinance>=0.2.0",
    "pandas>=2.1.0",
    "matplotlib>=3.8.0",
    "numpy>=1.26.0",
    "scipy>=1.11.0",
    "structlog>=23.2.0",
    "python-jose[cryptography]>=3.3.0",  # JWT handling
    "python-multipart>=0.0.6",         # File uploads
    "httpx>=0.25.0",                    # Async HTTP client
    "tenacity>=8.2.0",                  # Retry logic
    "tencentcloud-sdk-python-ses>=3.0.0",  # Tencent Cloud SES for email
    "bcrypt>=4.0.0",                    # Password hashing
    "kubernetes>=30.0.0",               # Kubernetes client for metrics
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.10.0",
    "ruff>=0.1.5",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "httpx>=0.25.0",         # For testing async endpoints
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "matplotlib.*",
    "redis.*",
    "scipy.*",
    "kubernetes.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]
