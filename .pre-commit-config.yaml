# Pre-commit hooks configuration for Financial Agent
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Version validation - enforce version increment
  - repo: local
    hooks:
      - id: validate-version
        name: Validate Version Increment
        entry: ./scripts/validate-version.sh
        language: system
        pass_filenames: false
        stages: [pre-commit]

      - id: check-file-length
        name: Check for oversized files (500 line limit)
        entry: ./scripts/check-file-length.sh
        language: system
        types_or: [python, javascript, jsx, ts, tsx]
        exclude: '(__init__\.py|test_.*\.py|.*\.test\.ts|.*\.test\.tsx)$'

  # Python code quality
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        files: ^backend/
        language_version: python3.12

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.0
    hooks:
      - id: ruff
        files: ^backend/
        args: [--fix]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2
    hooks:
      - id: mypy
        files: ^backend/src/
        additional_dependencies:
          - types-redis
          - pydantic

  # Radon complexity - optional (install: pip install radon)
  # - repo: local
  #   hooks:
  #     - id: radon
  #       name: Check code complexity (Radon)
  #       entry: radon cc --min C -a -s
  #       language: system
  #       files: ^backend/.*\.py$
  #       pass_filenames: false

  # Frontend code quality
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: ^frontend/
        types_or: [javascript, jsx, ts, tsx, json, css]

  # General checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]  # Allow custom tags in k8s yaml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: detect-private-key

  # Security Scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        files: ^backend/src/
        exclude: ^backend/(tests|scripts)/
        args: ["-c", "backend/pyproject.toml", "-ll"]
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks

  # Kubernetes Linting (run via Docker on built manifests)
  - repo: local
    hooks:
      - id: kube-linter
        name: Kubernetes Linter (kube-linter)
        entry: bash -c 'kubectl kustomize .pipeline/k8s/base > /tmp/k8s-manifests.yaml && docker run --rm -v "/tmp:/tmp" stackrox/kube-linter:latest lint /tmp/k8s-manifests.yaml'
        language: system
        files: ^\.pipeline/k8s/.*\.yaml$
        pass_filenames: false

      - id: kubeconform
        name: Kubernetes Validator (kubeconform)
        entry: bash -c 'kubectl kustomize .pipeline/k8s/base > /tmp/k8s-manifests.yaml && docker run --rm -v "/tmp:/tmp" ghcr.io/yannh/kubeconform:latest -strict -summary -skip ClusterIssuer /tmp/k8s-manifests.yaml'
        language: system
        files: ^\.pipeline/k8s/.*\.yaml$
        pass_filenames: false

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.14.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile
