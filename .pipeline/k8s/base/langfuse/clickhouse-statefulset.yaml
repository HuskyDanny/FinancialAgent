apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: langfuse-clickhouse
  labels:
    app: langfuse-clickhouse
    component: analytics
spec:
  serviceName: langfuse-clickhouse
  replicas: 1
  selector:
    matchLabels:
      app: langfuse-clickhouse
  template:
    metadata:
      labels:
        app: langfuse-clickhouse
        component: analytics
    spec:
      serviceAccountName: klinematrix-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # ClickHouse user
        fsGroup: 101
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:24.1-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 9000
          name: native
        env:
        - name: CLICKHOUSE_DB
          value: "langfuse"
        - name: CLICKHOUSE_USER
          value: "langfuse"
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: langfuse-secrets
              key: clickhouse-password
        - name: CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
          value: "1"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # ClickHouse needs write access
          runAsNonRoot: true
          runAsUser: 101
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: data
          mountPath: /var/lib/clickhouse
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /var/log/clickhouse-server
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
