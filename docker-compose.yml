services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.development  # Load all config from gitignored file
    environment:
      - ENVIRONMENT=development
    depends_on:
      - mongodb
      - redis
      - langfuse-server  # Langfuse observability (v3.x with ClickHouse)
    volumes:
      - ./backend:/app  # Mount full backend directory
      - backend_deps:/home/app/.local  # Persist pip user install packages
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=financial_agent
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # ===================================
  # Langfuse Observability Stack
  # ===================================

  # MinIO for S3-compatible blob storage (required for Langfuse v3)
  langfuse-minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9002:9000"  # API endpoint (avoid conflict with ClickHouse port 9000)
      - "9003:9001"  # Console UI
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # PostgreSQL for Langfuse metadata
  langfuse-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: langfuse
      POSTGRES_USER: langfuse
      POSTGRES_PASSWORD: langfuse_local_password
    ports:
      - "5432:5432"
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ClickHouse for Langfuse analytics (OLAP)
  langfuse-clickhouse:
    image: clickhouse/clickhouse-server:24.1-alpine
    environment:
      CLICKHOUSE_DB: langfuse
      CLICKHOUSE_USER: langfuse
      CLICKHOUSE_PASSWORD: langfuse_clickhouse_password
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Langfuse Server (Web UI + API)
  langfuse-server:
    image: langfuse/langfuse:3
    environment:
      # Database
      DATABASE_URL: postgresql://langfuse:langfuse_local_password@langfuse-postgres:5432/langfuse

      # ClickHouse (required for v3.x)
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: langfuse
      CLICKHOUSE_PASSWORD: langfuse_clickhouse_password
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse:langfuse_clickhouse_password@langfuse-clickhouse:9000/langfuse
      CLICKHOUSE_CLUSTER_ENABLED: "false"  # Disable clustering for local dev (no Zookeeper)

      # Redis (required for v3.x queue management)
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # REDIS_AUTH not set (no password required for local dev)

      # S3/MinIO Event Uploads (mandatory for v3.x)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse-events
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minioadmin
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: minioadmin
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"  # Required for MinIO

      # Auth (local development)
      NEXTAUTH_URL: http://localhost:3001
      NEXTAUTH_SECRET: local-dev-secret-change-in-production
      SALT: local-dev-salt-change-in-production

      # Disable telemetry for local dev
      TELEMETRY_ENABLED: false
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: true

      # API keys (will be created on first startup)
      # Access Langfuse UI to get actual keys after first run
    ports:
      - "3001:3000"  # Langfuse UI (avoid conflict with frontend on 3000)
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/public/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Langfuse Worker (background processing)
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    environment:
      # Database
      DATABASE_URL: postgresql://langfuse:langfuse_local_password@langfuse-postgres:5432/langfuse

      # ClickHouse (required for v3.x)
      CLICKHOUSE_URL: http://langfuse-clickhouse:8123
      CLICKHOUSE_USER: langfuse
      CLICKHOUSE_PASSWORD: langfuse_clickhouse_password
      CLICKHOUSE_MIGRATION_URL: clickhouse://langfuse:langfuse_clickhouse_password@langfuse-clickhouse:9000/langfuse
      CLICKHOUSE_CLUSTER_ENABLED: "false"  # Disable clustering for local dev (no Zookeeper)

      # Redis (required for v3.x queue management)
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # REDIS_AUTH not set (no password required for local dev)

      # S3/MinIO Event Uploads (mandatory for v3.x)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse-events
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minioadmin
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: minioadmin
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://langfuse-minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"  # Required for MinIO

      # Auth (must match server)
      NEXTAUTH_URL: http://localhost:3001
      NEXTAUTH_SECRET: local-dev-secret-change-in-production
      SALT: local-dev-salt-change-in-production

      # Disable telemetry
      TELEMETRY_ENABLED: false
    depends_on:
      langfuse-postgres:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
      langfuse-minio:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:
  backend_deps:  # Persist Python packages across restarts
  langfuse_postgres_data:  # Langfuse PostgreSQL data
  langfuse_clickhouse_data:  # Langfuse ClickHouse data
  langfuse_minio_data:  # MinIO S3-compatible storage data
